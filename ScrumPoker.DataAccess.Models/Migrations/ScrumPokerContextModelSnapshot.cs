// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ScrumPoker.DataAccess.Models.EFContext;

#nullable disable

namespace ScrumPoker.DataAccess.Models.Migrations
{
    [DbContext(typeof(ScrumPokerContext))]
    partial class ScrumPokerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ScrumPoker.DataAccess.Models.Models.GameRoomDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("GameRooms", (string)null);
                });

            modelBuilder.Entity("ScrumPoker.DataAccess.Models.Models.GameRoomPlayer", b =>
                {
                    b.Property<int>("GameRoomId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.HasKey("GameRoomId", "PlayerId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("GameRoomId", "PlayerId");

                    b.ToTable("GameRoomsPlayers", (string)null);
                });

            modelBuilder.Entity("ScrumPoker.DataAccess.Models.Models.PlayerDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id", "Email");

                    b.ToTable("Players", (string)null);
                });

            modelBuilder.Entity("ScrumPoker.DataAccess.Models.Models.GameRoomPlayer", b =>
                {
                    b.HasOne("ScrumPoker.DataAccess.Models.Models.GameRoomDto", "GameRoom")
                        .WithMany("GameRoomPlayers")
                        .HasForeignKey("GameRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ScrumPoker.DataAccess.Models.Models.PlayerDto", "Player")
                        .WithMany("PlayerGameRooms")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameRoom");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("ScrumPoker.DataAccess.Models.Models.GameRoomDto", b =>
                {
                    b.Navigation("GameRoomPlayers");
                });

            modelBuilder.Entity("ScrumPoker.DataAccess.Models.Models.PlayerDto", b =>
                {
                    b.Navigation("PlayerGameRooms");
                });
#pragma warning restore 612, 618
        }
    }
}
